# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
com-fasterxml-jackson-datatype-jackson-datatype-jsr310 = "2.19.0"
com-h2database-h2 = "2.1.214"
com-twilio-sdk-twilio = "10.7.0"
io-projectreactor-netty-reactor-netty = "1.2.6"
net-datafaker-datafaker = "2.3.0"
org-hibernate-validator-hibernate-validator = "8.0.0.Final"
org-iban4j-iban4j = "3.2.11-RELEASE"
org-javamoney-moneta = "1.4.4"
org-jobrunr-jobrunr-spring-boot-v3-starter = "8.0.0-beta.1"
org-mapstruct-mapstruct = "1.6.3"
org-mapstruct-mapstruct-processor = "1.6.3"
org-postgresql-postgresql = "42.7.5"
org-projectlombok-lombok = "1.18.38"
org-springdoc-springdoc-openapi-starter-webmvc-ui = "2.5.0"
org-springframework-boot-spring-boot-devtools = "3.5.0"
org-springframework-boot-spring-boot-starter = "3.5.0"
org-springframework-boot-spring-boot-starter-actuator = "3.5.0"
org-springframework-boot-spring-boot-starter-data-jpa = "3.5.0"
org-springframework-boot-spring-boot-starter-log4j2 = "3.5.0"
org-springframework-boot-spring-boot-starter-oauth2-client = "3.5.0"
org-springframework-boot-spring-boot-starter-security = "3.5.0"
org-springframework-boot-spring-boot-starter-test = "3.5.0"
org-springframework-boot-spring-boot-starter-web = "3.5.0"
org-springframework-boot-spring-boot-testcontainers = "3.5.0"
org-springframework-data-spring-data-redis = "3.4.3"
org-springframework-kafka-spring-kafka = "3.3.4"
org-springframework-security-spring-security-test = "6.5.0"
org-springframework-session-spring-session-data-redis = "3.5.0"
org-springframework-session-spring-session-jdbc = "3.5.0"
org-springframework-spring-webflux = "6.2.7"
org-testcontainers-junit-jupiter = "1.21.0"
org-testcontainers-postgresql = "1.21.0"
redis-clients-jedis = "5.2.0"


[plugins]
versions = { id = "org.springframework.boot", version = "3.5.0" }

[libraries]
com-fasterxml-jackson-datatype-jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "com-fasterxml-jackson-datatype-jackson-datatype-jsr310" }
com-h2database-h2 = { module = "com.h2database:h2", version.ref = "com-h2database-h2" }
com-twilio-sdk-twilio = { module = "com.twilio.sdk:twilio", version.ref = "com-twilio-sdk-twilio" }
io-projectreactor-netty-reactor-netty = { module = "io.projectreactor.netty:reactor-netty", version.ref = "io-projectreactor-netty-reactor-netty" }
net-datafaker-datafaker = { module = "net.datafaker:datafaker", version.ref = "net-datafaker-datafaker" }
org-hibernate-validator-hibernate-validator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "org-hibernate-validator-hibernate-validator" }
org-iban4j-iban4j = { module = "org.iban4j:iban4j", version.ref = "org-iban4j-iban4j" }
org-javamoney-moneta = { module = "org.javamoney:moneta", version.ref = "org-javamoney-moneta" }
org-jobrunr-jobrunr-spring-boot-v3-starter = { module = "org.jobrunr:jobrunr-spring-boot-3-starter", version.ref = "org-jobrunr-jobrunr-spring-boot-v3-starter" }
org-mapstruct-mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "org-mapstruct-mapstruct" }
org-mapstruct-mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "org-mapstruct-mapstruct-processor" }
org-postgresql-postgresql = { module = "org.postgresql:postgresql", version.ref = "org-postgresql-postgresql" }
org-projectlombok-lombok = { module = "org.projectlombok:lombok", version.ref = "org-projectlombok-lombok" }
org-springdoc-springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "org-springdoc-springdoc-openapi-starter-webmvc-ui" }
org-springframework-boot-spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "org-springframework-boot-spring-boot-devtools" }
org-springframework-boot-spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "org-springframework-boot-spring-boot-starter" }
org-springframework-boot-spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "org-springframework-boot-spring-boot-starter-actuator" }
org-springframework-boot-spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "org-springframework-boot-spring-boot-starter-data-jpa" }
org-springframework-boot-spring-boot-starter-log4j2 = { module = "org.springframework.boot:spring-boot-starter-log4j2", version.ref = "org-springframework-boot-spring-boot-starter-log4j2" }
org-springframework-boot-spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "org-springframework-boot-spring-boot-starter-oauth2-client" }
org-springframework-boot-spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "org-springframework-boot-spring-boot-starter-security" }
org-springframework-boot-spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "org-springframework-boot-spring-boot-starter-test" }
org-springframework-boot-spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "org-springframework-boot-spring-boot-starter-web" }
org-springframework-boot-spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers", version.ref = "org-springframework-boot-spring-boot-testcontainers" }
org-springframework-data-spring-data-redis = { module = "org.springframework.data:spring-data-redis", version.ref = "org-springframework-data-spring-data-redis" }
org-springframework-kafka-spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "org-springframework-kafka-spring-kafka" }
org-springframework-security-spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "org-springframework-security-spring-security-test" }
org-springframework-session-spring-session-data-redis = { module = "org.springframework.session:spring-session-data-redis", version.ref = "org-springframework-session-spring-session-data-redis" }
org-springframework-session-spring-session-jdbc = { module = "org.springframework.session:spring-session-jdbc", version.ref = "org-springframework-session-spring-session-jdbc" }
org-springframework-spring-webflux = { module = "org.springframework:spring-webflux", version.ref = "org-springframework-spring-webflux" }
org-testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "org-testcontainers-junit-jupiter" }
org-testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "org-testcontainers-postgresql" }
redis-clients-jedis = { module = "redis.clients:jedis", version.ref = "redis-clients-jedis" }
