CREATE SEQUENCE IF NOT EXISTS ACCOUNTS_SEQ START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS EMPLOYEE_SEQ START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS HOLDERS_SEQ START WITH 1 INCREMENT BY 50;

CREATE TABLE ACCOUNTS
(
    ID           BIGINT                      NOT NULL,
    BALANCE      DECIMAL                     NOT NULL,
    CURRENCY     VARCHAR(255)                NOT NULL,
    STATUS       SMALLINT,
    ACCOUNT_TYPE SMALLINT,
    HOLDER_ID    BIGINT,
    MANAGER_ID   BIGINT,
    DATE_OPENED  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    LAST_UPDATED TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT PK_ACCOUNTS PRIMARY KEY (ID)
);

CREATE TABLE EMPLOYEES
(
    ID              BIGINT       NOT NULL,
    FIRST_NAME      VARCHAR(255) NOT NULL,
    LAST_NAME       VARCHAR(255) NOT NULL,
    "date-of-birth" DATE         NOT NULL,
    "phone-number"  VARCHAR(15)  NOT NULL,
    CONSTRAINT PK_EMPLOYEES PRIMARY KEY (ID)
);

CREATE TABLE HOLDERS
(
    ID                       BIGINT       NOT NULL,
    "first-name"             VARCHAR(255) NOT NULL,
    "last-name"              VARCHAR(255) NOT NULL,
    "date-of-birth"          DATE         NOT NULL,
    "phone-number"           VARCHAR(15)  NOT NULL,
    EMAIL                    VARCHAR(255),
    "social-security-number" VARCHAR(255),
    USERNAME                 VARCHAR(28),
    PASSWORD                 VARCHAR(20),
    CONSTRAINT PK_HOLDERS PRIMARY KEY (ID)
);

CREATE TABLE TRANSACTIONS
(
    ID                 UUID                        NOT NULL,
    AMOUNT             DECIMAL                     NOT NULL,
    CURRENCY           VARCHAR(255)                NOT NULL,
    SOURCE_ACCOUNT_ID  BIGINT                      NOT NULL,
    TARGET_ACCOUNT_ID  BIGINT                      NOT NULL,
    TRANSACTION_STATUS SMALLINT                    NOT NULL,
    FEE                DECIMAL                     NOT NULL,
    CREATED_AT         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    UPDATED_AT         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT PK_TRANSACTIONS PRIMARY KEY (ID)
);

ALTER TABLE TRANSACTIONS
    ADD CONSTRAINT UC_TRANSACTIONS_SOURCE_ACCOUNT UNIQUE (SOURCE_ACCOUNT_ID);

ALTER TABLE TRANSACTIONS
    ADD CONSTRAINT UC_TRANSACTIONS_TARGET_ACCOUNT UNIQUE (TARGET_ACCOUNT_ID);

ALTER TABLE ACCOUNTS
    ADD CONSTRAINT FK_ACCOUNTS_ON_HOLDER FOREIGN KEY (HOLDER_ID) REFERENCES HOLDERS (ID);

ALTER TABLE ACCOUNTS
    ADD CONSTRAINT FK_ACCOUNTS_ON_MANAGER FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEES (ID);

ALTER TABLE TRANSACTIONS
    ADD CONSTRAINT FK_TRANSACTIONS_ON_SOURCE_ACCOUNT FOREIGN KEY (SOURCE_ACCOUNT_ID) REFERENCES ACCOUNTS (ID);

ALTER TABLE TRANSACTIONS
    ADD CONSTRAINT FK_TRANSACTIONS_ON_TARGET_ACCOUNT FOREIGN KEY (TARGET_ACCOUNT_ID) REFERENCES ACCOUNTS (ID);